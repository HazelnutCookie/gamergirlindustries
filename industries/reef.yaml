available: false
callbacks: |
  const type{
      level_requirements dict
      random_prod_factor dict
      supply_requirement integer

      accept_cargo_types cargodict
      prod_cargo_types cargodict
  }

  local type{
      total_delivered integer
      current_production_level integer
      random_range integer

      i iterator
      level iterator
      cargo iterator
  }

  industry:storage type{
      supplied_cycles_remaining_cargo cargodict

      base_prod_factor integer

      num_supplies_delivered 27 list
  }

  level_requirements 0 [] 100 =
  level_requirements 16 [] 150 =
  level_requirements 16 5 * [] 300 =

  random_prod_factor 0 [] 8 =
  random_prod_factor 1 [] 12 =
  random_prod_factor 5 [] 16 =
  random_prod_factor 7 [] 20 =
  random_prod_factor 10 [] 24 =
  random_prod_factor 11 [] 28 =
  random_prod_factor 12 [] 32 =
  random_prod_factor 13 [] 36 =

  supply_requirement 8 =

  accept_cargo_types ctt:PASS [] 1 =
  prod_cargo_types ctt:PASS [] 5 =
  prod_cargo_types ctt:PERL [] 10 =
  prod_cargo_types ctt:FISH [] 18 =

  /*
   The following is a replication of what FIRS is doing for a primary industry.
   See: https://github.com/andythenorth/firs/blob/4.4.0/src/templates/produce_primary.pynml
  */



  cb:production_initial def{
      /* Highest value in random_prod_factor is 13. */
      random_range industry:random_bits 14 % =

      level random_prod_factor loop{
          base_prod_factor
              random_prod_factor level []
              base_prod_factor
              random_range level >=
          =
      }

      /* Initial production level. Can be changed with cheats. */
      result:value 16 =
  }

  cb:production_change_monthly def{
      result:value 0 =
  }

  cb:production_change_random def{
      result:value 0 =
  }
cargoAcceptance:
- PASS
cargoProduction:
- PASS
- FISH
- PERL
colour: 1
fundCostMultiplier: 255
id: 4
layout:
- - - -1
name: Reef
placement: on-water
probabilityInGame: 0
probabilityMapGen: 5
prospectChance: 0
tiles: []
type: primary
